//
//  RocketsViewControllerTests.swift
//  CleanSpaceX
//
//  Created by Ahmed Iqbal on 7/2/22.
//  Copyright (c) 2022 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

@testable import CleanSpaceX
import XCTest

class RocketsViewControllerTests: XCTestCase
{
    // MARK: Subject under test
    
    var sut: RocketsViewController!
    var window: UIWindow!
    
    // MARK: Test lifecycle
    
    override func setUp()
    {
        super.setUp()
        window = UIWindow()
        setupRocketsViewController()
    }
    
    override func tearDown()
    {
        sut = nil
        window = nil
        super.tearDown()
    }
    
    // MARK: Test setup
    
    func setupRocketsViewController()
    {
        let bundle = Bundle.main
        let storyboard = UIStoryboard(name: "Main", bundle: bundle)
        sut = storyboard.instantiateViewController(withIdentifier: "RocketsViewController") as? RocketsViewController
        sut.loadViewIfNeeded()
    }
    
    func loadView()
    {
        window.addSubview(sut.view)
        RunLoop.current.run(until: Date())
    }
    
    // MARK: Test doubles
    
    class RocketsBusinessLogicSpy: RocketsBusinessLogic
    {
        var getRocketsLookupsCalled = false
        var sendRocketsListCalled = false
        
        func fetchRockets(request: Rockets.SpaceX.Request) {
            getRocketsLookupsCalled = true
        }
        
        func sendRocketsList(request: Rockets.SendRocketDetail.Request) {
            sendRocketsListCalled = true
        }
    }
    func testRocketsViewController_WhenCreated_HasTableViewProtocolsRegistered() throws {
        // Arrange & Act
        let tableView: UITableView = try XCTUnwrap(sut.tableView, "tableView does not have a referencing outlet")
        let tableViewDelegate = try XCTUnwrap(tableView.delegate, "RocketsViewController's tableView delegate is nil")
        let tableViewDataSource = try XCTUnwrap(tableView.dataSource, "RocketsViewController's tableView datasource is nil")
        
        // Assert
        XCTAssertTrue(tableViewDelegate.isKind(of: RocketsViewController.self), "RocketsViewController is not injected to tableView as delegate")
        XCTAssertTrue(tableViewDataSource.isKind(of: RocketsViewController.self), "RocketsViewController is not injected to tableView as dataSource")
    }
    
    func testRocketsViewController_WhenCreated_HasTableViewCellsRegistered() throws {
        // Arrange
        let tableView: UITableView = try XCTUnwrap(sut.tableView, "tableView does not have a referencing outlet")
        
        // Act
        let registeredCellClasses = tableView.value(forKey: "_cellClassDict") as? [String:Any]
        
        // Assert
        XCTAssertNotNil(registeredCellClasses?.contains(where: {($0.key == "RocketsCell")}), "RocketsCell is not registered with tableView")
    }
    
    // MARK: Tests
    
    func testRocketsViewController_ShouldGetRocketsLookups_WhenMethodCalledFetchRockets()
    {
        // Given
        let spy = RocketsBusinessLogicSpy()
        sut.interactor = spy
        
        // When
        sut.interactor?.fetchRockets(request: Rockets.SpaceX.Request())
        
        // Then
        XCTAssertTrue(spy.getRocketsLookupsCalled, "viewDidLoad() should ask the interactor to Call fetchLookups")
    }
}
